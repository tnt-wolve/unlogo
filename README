UNLOGO
By Jeff Crouse and Kashif Bilal
jefftimesten at gmail dot com
with support from Minnesota Art on Wheels and Eyebeam

This software is licensed under the GNU-GPL version 3 or later.

Unlogo is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public
License as published by the Free Software Foundation; either
version 3 of the License, or (at your option) any later version.

Unlogo is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
General Public License for more details.



REQUIREMENTS
========================

- OpenCV 2.1+: http://opencv.willowgarage.com/wiki/

	svn co https://code.ros.org/svn/opencv/trunk/opencv -r 3513
	cd opencv
	sudo cmake -G "Unix Makefiles" .
	sudo make
	sudo make install

- Boost - http://sourceforge.net/projects/boost/files/boost/1.44.0/

- FFMPEG (fetched automatically with checkout.sh)
	

OSX NOTES
========================

- Unlogo uses a lot of bleeding-edge stuff. Update your MacPorts!

	sudo port selfupdate
	sudo port upgrade outdated

- In OpenCV rev 3513, you might need to change line 55 in both opencv/modules/gpu/src/constantspacebp_gpu.cpp and opencv/modules/gpu/src/beliefpropagation_gpu.cpp from 

	void cv::gpu::StereoBeliefPropagation::operator()(const GpuMat&, const GpuMat&, GpuMat&, const Stream&) { throw_nogpu(); }

to

	void cv::gpu::StereoBeliefPropagation::operator()(const GpuMat&, const GpuMat&, GpuMat&, Stream&) { throw_nogpu(); }

- In OpenCV rev 3513 opencv/modules/gpu/src/matrix_operations.cpp, comment out line 71 -- the function doesn't exist.

	//void MatPL::get_property_device() { throw_nogpu(); }



BUILDING
========================

The Unlogo filter uses the 'plugin' AVFilter for FFMPEG written by Kashif Balil.  This greatly simplifies and speeds up the process of making an AVFilter by allowing the user to reference a shared object when running FFMPEG rather than having to recompile all of FFMPEG with every change. So the first thing you need to do is compile a version of FFMPEG with the 'plugin' filter.   
Note:  Libavfilter is only available in the 0.6 branch. Older version of FFMPEG will not work. 

- Run checkout.sh

	./checkout.sh

- Configure and build FFMPEG as you normally would. Google is full of tutorials of how to build FFMPEG on your particular platform.  This works for me:

	cd ffmpeg
	./configure --arch=x86 --enable-libmp3lame --enable-libx264 --enable-nonfree --enable-gpl --disable-doc --prefix=../
	make
	make install

- Now make logo.so by running 'make' from the root directory.  Make sure you've already installed the requirements listed above


- You're done!  



INSTRUCTIONS FOR USE
========================

To use the filter, make sure to use the version of FFMPEG that you just built, and then do something like this: 

	ffmpeg -qscale 2 -i [input video] -vf plugin=unlogo.so:[detector type]:[descriptor extracor type]:[matcher type]:[logo image(s)] -y [output file name]

	ffmpeg -qscale 2 -i share/videos/IMG_0092.MOV -vf plugin=unlogo.so:SURF:SURF:BruteForce:share/logos/Dior.jpg:share/replace/Dior.jpg:share/logos/Chanel.jpg:#FFFFFF -y out.mov

Possible values as of OpenCV 3513 are:

- Detector Types
	FAST, STAR, SIFT, SURF, MSER, GFTT, HARRIS
	
- Descriptor Types
	SIFT, SURF
	
- Descriptor Matcher Types
	BruteForce, BruteForce-L1
	


TO DO
=========================	
- Save out descriptors and keypoints to text files with FileStorage objects
- Config file input


