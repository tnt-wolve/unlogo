THE MOUSTACHIZER
By Jeff Crouse
jefftimesten at gmail dot com

This software is licensed under the GNU-GPL version 3 or later.

THE MOUSTACHIZER is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public
License as published by the Free Software Foundation; either
version 3 of the License, or (at your option) any later version.

THE MOUSTACHIZER is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
General Public License for more details.



REQUIREMENTS
========================

- OpenCV 2.1+: http://opencv.willowgarage.com/wiki/

	svn co https://code.ros.org/svn/opencv/trunk/opencv -r 3513
	cd opencv
	patch -p0 -i ../opencv_unlogo_fixes_rev3515.patch
	sudo cmake -G "Unix Makefiles" .
	sudo make
	sudo make install

	Note: The patch fixes 2 bugs in OpenCV, plus enabling alpha-loading in PNGs, as described here: 
	http://blog.developer.stylight.de/2010/05/how-to-load-alpha-channel-pngs-with.html

- FFMPEG (use checkout.sh to fetch and patch)



BUILDING
========================

The THE MOUSTACHIZER filter uses the 'plugin' AVFilter for FFMPEG written by Michael Droese.  This greatly simplifies and speeds up the process of making a filter by allowing the user to reference a shared object when running FFMPEG rather than having to recompile all of FFMPEG with every change. So the first thing you need to do is compile a version of FFMPEG with the 'plugin' filter.   
Note:  Libavfilter is only available in the 0.6 branch. Older version of FFMPEG will not work. 

- Run checkout.sh

	./checkout.sh

- Configure and build FFMPEG as you normally would. Google is full of tutorials of how to build FFMPEG on your particular platform.  This works for me:

	cd ffmpeg
	./configure --arch=x86 --enable-libmp3lame --enable-libx264 --enable-nonfree --enable-gpl --disable-doc --prefix=..
	make
	make install

- Now make moustachizer.so by running 'make' from the root directory.  Make sure you've already installed the requirements listed above

- You're done!  



INSTRUCTIONS FOR USE
========================

To use the filter, make sure to use the version of FFMPEG that you just built, and then do something like this: 

	ffmpeg -qscale 2 -i [input video] -vf plugin=moustachizer.so -y [output file name]



TROUBLESHOOTING
========================

- You might want to consider changing the following build options in OpenCV from the defaults:

	BUILD_SHARED_LIBS:BOOL=ON
	CMAKE_BUILD_TYPE:STRING=
	CMAKE_INSTALL_PREFIX:PATH=/usr/local
	
to this:
	
	BUILD_SHARED_LIBS:BOOL=OFF
	CMAKE_BUILD_TYPE:STRING=Debug
	CMAKE_INSTALL_PREFIX:PATH=[YOUR_PATH_TO_MOUSTACHIZER]
	
You can change this by running the following instead of the cmake line listed above:
	
	sudo ccmake -i -G "Unix Makefiles" .

The first puts debug symbols into OpenCV so that you can track down errors.  The second builds OpenCV in your MOUSTACHIZER directory so that you don't contaminate your system with our "patched" (hacked) version.

- THE MOUSTACHIZER uses a lot of bleeding-edge stuff. Update your MacPorts!

	sudo port selfupdate
	sudo port upgrade outdated

- make logo.so
On OS X 10.5 (gcc version 4.0.1) change the Makefile
g++ -shared -o THE MOUSTACHIZER.so $(OBJS) $(LIBS)
g++ -bundle -o THE MOUSTACHIZER.so $(OBJS) $(LIBS)
(http://stackoverflow.com/questions/1494407/undefined-symbol-main-when-trying-to-build-shared-library-g-mac)


TO DO
=========================	
- Save out descriptors and keypoints to text files with FileStorage objects
- Config file input


